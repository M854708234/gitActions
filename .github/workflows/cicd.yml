name: 部署Vite+React前端到/www目录

on:
  push:
    branches: [main] # 仅main分支推送时触发部署

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: 拉取代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 配置Node.js环境
        uses: actions/setup-node@v4
        with:
          node-version: 20.x # Vite推荐Node.js 18+
          cache: "npm" # 缓存依赖，加速构建

      - name: 安装依赖
        run: |
          echo "安装项目依赖..."
          npm ci  # 严格安装package-lock.json中的版本

      - name: 构建Vite项目
        id: build
        run: |
          echo "开始构建..."
          npm run build  # 执行Vite构建命令（默认输出到dist目录）

          # 验证构建产物
          echo "构建产物目录："
          ls -la ./dist

          # 输出构建目录绝对路径
          echo "dist-path=${{ github.workspace }}/dist" >> $GITHUB_OUTPUT

          # 生成唯一标识文件，便于服务器验证
          echo "部署时间: $(date +%Y%m%d%H%M%S)" > ./dist/DEPLOY_INFO.txt

      - name: 服务器环境准备（权限与目录）
        uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          debug: true
          script: |
            # 确认登录用户
            echo "登录用户: $(whoami)"

            # 准备目标目录
            sudo mkdir -p /www
            sudo chown -R $(whoami) /www  # 授权当前用户
            chmod 755 /www
            echo "/www目录权限: $(ls -ld /www)"

            # 备份旧版本（保留最近3个备份）
            echo "备份旧版本..."
            if [ -d "/www" ]; then
              BACKUP_DIR="/www_backup_$(date +%Y%m%d%H%M%S)"
              mv /www $BACKUP_DIR
              echo "已备份到: $BACKUP_DIR"
              # 清理3天前的备份
              find / -maxdepth 1 -name "www_backup_*" -type d -mtime +3 -delete
            fi

            # 重新创建空的目标目录
            mkdir -p /www

      - name: 传输构建产物到服务器
        uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          debug: true
          # 传输dist目录下的所有文件（不含dist本身）
          src: ${{ steps.build.outputs.dist-path }}/*
          target: /www/ # 确保以/结尾，文件直接放入/www
          overwrite: true
          recursive: true # 递归传输目录内容

      - name: 验证服务器文件
        uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo "===== /www目录内容 ====="
            ls -la /www

            echo -e "\n===== 验证构建产物 ====="
            if [ -f "/www/index.html" ]; then
              echo "✅ 前端入口文件存在"
              cat /www/DEPLOY_INFO.txt  # 显示部署信息
            else
              echo "❌ 前端文件部署失败"
              exit 1
            fi

            # 检查文件权限
            echo -e "\n文件权限检查:"
            ls -la /www/index.html
