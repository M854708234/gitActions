name: build and deploy
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.12"
      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: cache-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cache-node-modules-
      - name: Install dependencies
        run: npm ci
      - name: Build project
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: ${{ github.workspace }}/dist/
      - name: Verify build output
        run: |
          ls -R ${{ github.workspace }}/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create local directory
        run: mkdir -p ${{ github.workspace }}/local

      - name: Download dist
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: ${{ github.workspace }}/local/

      - name: Verify downloaded files
        run: |
          ls -R ${{ github.workspace }}/local

      - name: Deploy to /www1
        run: |
          # 确保目标目录存在并授权
          sudo mkdir -p /www1
          sudo chown -R ${{ secrets.SERVER_USERNAME }}:www-data /www1
          sudo chmod -R 755 /www1
          echo "目录 /www1 创建并授权成功"
          scp -i ${{ secrets.SERVER_SSH_KEY }} -r ${{ github.workspace }}/local/* ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:/www1/

      - name: Verify deployment
        run: |
          ssh -i ${{ secrets.SERVER_SSH_KEY }} ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "ls -R /www1"
          echo "部署到 /www1 完成"
