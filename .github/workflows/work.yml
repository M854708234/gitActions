name: build and deploy
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.12"
      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: cache-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cache-node-modules-
      - name: Install dependencies
        run: npm ci
      - name: Build project
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: ${{ github.workspace }}/dist/
      - name: Verify build output
        run: |
          ls -R ${{ github.workspace }}/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create local directory
        run: mkdir -p ${{ github.workspace }}/local

      - name: Download dist
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: ${{ github.workspace }}/local/

      - name: Verify downloaded files
        run: |
          ls -R ${{ github.workspace }}/local

      - name: Deploy to /www1
        uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo "当前工作目录: $(pwd)"
            ls -l
            sudo mkdir -p /www1
            sudo chown -R ${{ secrets.SERVER_USERNAME }}:www-data /www1
            sudo chmod -R 755 /www1
            echo "目录 /www1 创建并授权成功"
          debug: true
          src: ${{ github.workspace }}/local/
          target: /www1/
          overwrite: true

      - name: Deploy test.yml to /www2
        uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            sudo mkdir -p /www2
            sudo chown -R ${{ secrets.SERVER_USERNAME }}:www-data /www2
            sudo chmod -R 755 /www2
            echo "目录 /www2 创建并授权成功"
          debug: true
          src: ${{ github.workspace }}/local/test.yml
          target: /www2/
          overwrite: true

      - name: Verify remote files
        uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            ls -l /www1
            ls -l /www2
