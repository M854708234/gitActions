name: build and deploy
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.12"
      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: cache-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cache-node-modules-
      - name: Install dependencies
        run: npm ci
      - name: Build project
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: ${{ github.workspace }}/dist/
      - name: Verify build output
        run: |
          ls -R ${{ github.workspace }}/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create local directory
        run: mkdir -p ${{ github.workspace }}/local

      - name: Download dist
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: ${{ github.workspace }}/local/

      - name: Verify downloaded files
        run: |
          ls -R ${{ github.workspace }}/local

      - name: Verify SSH login user and server environment
        uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          debug: true
          script: |
            echo "===== 登录用户信息 ====="
            whoami
            echo "用户家目录：$(echo $HOME)"

            if [ ! -d "/www" ]; then
              echo "目录 /www 不存在，创建中..."
              sudo mkdir -p /www
              sudo chown -R $(whoami) /www
              chmod 775 /www
            else
              echo "目录 /www 已存在"
            fi
      - name: 准备SSH环境
        run: |
          # 创建SSH目录并设置权限
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

          # 写入私钥（从GitHub Secrets获取）
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa  # 必须设置600权限，否则SSH拒绝使用

          # 添加服务器到已知主机（避免首次连接验证）
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Copy files to server
        run: |
          scp -i ~/.ssh/id_rsa -r ${{ github.workspace }}/local/test.yml ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:/www

      - name: Verify deployment
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} "ls -R /www"
          echo "部署到 /www 完成"
