name: my frist github action workflow
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22.12"

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: cache-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cache-node-modules-

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

      - name: Build project
        run: npm run build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: ./dist/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: ${{ github.workspace }}/local/

      - name: Verify downloaded files
        run: |
          tree ${{ github.workspace }}/local || ls -R ${{ github.workspace }}/local  # 显示目录结构
          echo "file-path=${{ github.workspace }}/local" >> $GITHUB_OUTPUT

      - name: 服务器权限与写入测试
        uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # 强制创建目录并授权
            sudo mkdir -p /www
            sudo chown -R $(whoami) /www
            chmod 775 /www  # 放宽权限测试

            # 测试在目标目录创建带唯一标识的文件
            echo "测试文件唯一标识" > /www/test-pre-deploy.txt
            echo -e "\n===== 预部署测试文件 ====="
            ls -la /www/test-pre-deploy.txt || echo "预部署测试文件创建失败"
            cat /www/test-pre-deploy.txt  # 验证能否在目标目录写入

      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            mkdir -p web && cd web
            # 备份旧版本
            if [ -d "dist" ]; then
              mv dist dist_old_$(date +%Y%m%d%H%M%S)
            fi
            # 创建新的 dist 目录
            mkdir -p dist
          debug: true
          src: ${{ steps.create-file.outputs.file-path }}/*
          target: /www/dist
          overwrite: true

      - name: Verify deployment
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo "远程服务器文件列表:"
            ls -la /web/dist
            tree ./web/dist || ls -R ./web/dist  # 显示目录结构
